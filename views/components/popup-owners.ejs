To animate the content and make each menu item display on hover, we can utilize CSS transitions and animations. Additionally, for responsiveness, we can adjust the layout and styles using media queries. Here's the updated code:

```html
<style>
.modal-owner {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4); /* Semi-transparent background */
}

.close-owner {
  color: #d6d6d6;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close-owner:hover,
.close-owner:focus {
  color: rgb(255, 0, 0);
  text-decoration: none;
  cursor: pointer;
}

.owners-btn {
  text-decoration: none;
  font-size: 16px;
  color: #ffffff;
  font-weight: bold;
  font-family: "Lumanosimo", cursive;
  font-weight: 600;
  font-style: normal;
  transition: all 0.15s ease-in-out;
  background: none;
  border: none;
}

.owners-btn:hover {
  text-shadow: 2px 2px 3px rgba(0, 0, 0, 0.8);
  cursor: pointer;
}

.food-genie-module {
  background-color: #f9f9f9;
  padding: 80px 0;
}

.owners-container {
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.owners-content {
  flex-basis: 50%;
}

.image {
  flex-basis: 40%;
}

.owners-content h2 {
  font-size: 2.5rem;
  margin-bottom: 20px;
  opacity: 0; /* Initially hidden */
  transform: translateY(20px); /* Initially translated down */
  transition: opacity 0.5s ease, transform 0.5s ease;
}

.owners-content p {
  font-size: 1.1rem;
  line-height: 1.6;
  margin-bottom: 20px;
  opacity: 0; /* Initially hidden */
  transform: translateY(20px); /* Initially translated down */
  transition: opacity 0.5s ease, transform 0.5s ease;
}

.owners-content ul {
  list-style: none;
  margin-bottom: 20px;
  opacity: 0; /* Initially hidden */
  transform: translateY(20px); /* Initially translated down */
  transition: opacity 0.5s ease, transform 0.5s ease;
}

.owners-content ul li {
  font-size: 1.1rem;
  opacity: 0; /* Initially hidden */
  transition: opacity 0.5s ease;
}

.owners-content:hover h2,
.owners-content:hover p,
.owners-content:hover ul {
  opacity: 1; /* Show on hover */
  transform: translateY(0); /* Move up on hover */
}

.owner-cta-button {
  display: inline-block;
  padding: 15px 30px;
  background-color: #007bff;
  color: #fff;
  text-decoration: none;
  border-radius: 5px;
  transition: background-color 0.3s ease;
}

.owners-cta-button:hover {
  background-color: #0056b3;
}

.image img {
  width: 100%;
  height: auto;
}

/* Responsive Styles */
@media screen and (max-width: 768px) {
  .owners-container {
    flex-direction: column;
    text-align: center;
  }

  .owners-content,
  .image {
    flex-basis: 100%;
  }

  .owners-content {
    margin-bottom: 40px;
  }
}
</style>

<button class="owners-btn" id="open-modal-owner">Owners</button>

<div class="modal-owner">
  <div class="food-genie-module">
    <div class="owners-container">
      <div class="owners-content">
        <h2>Discover the Magic of Food Genie</h2>
        <p>Welcome to Food Genie, your ultimate partner in culinary excellence! Whether you're a seasoned restaurateur or a budding food entrepreneur, our platform offers a wealth of services designed to catapult your business to new heights. Dive into a world of delectable dishes, innovative marketing strategies, and unparalleled support tailored to your unique needs.</p>
        <ul>
          <li>Recipe Promotion</li>
          <li>Digital Marketing Solutions</li>
          <li>Menu Enhancement</li>
          <li>Online Ordering Integration</li>
          <li>Customer Engagement</li>
        </ul>
        <a href="#" class="owners-cta-button">Get Started</a>
      </div>
      <div class="image">
        <img src="food-genie-image.jpg" alt="Food Genie Image">
      </div>
    </div>
  </div>
</div>

<script>
  AOS.init({
    duration: 800,
    easing: 'ease-in-out',
    once: true
  });

  var openModalOwnerBtn = document.getElementById('open-modal-owner');
  var modalOwner = document.querySelector('.modal-owner');

  // When the user clicks the button, display the modal
  openModalOwnerBtn.onclick = function() {
    modalOwner.style.display = 'block';
  };

  // When the user clicks on the close button, close the modal
  var closeBtn = document.querySelector('.close-owner');
  closeBtn.onclick = function() {
    modalOwner.style.display = 'none';
  };

  // When the user clicks anywhere outside of the modal, close it
  window.onclick = function(event) {
    if (event.target == modalOwner) {
      modalOwner.style.display = 'none';
    }
  };
</script>
```

In this updated version, the content of the modal will